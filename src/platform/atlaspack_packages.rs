#[rustfmt::skip]
pub static KNOWN_PACKAGES: &'static [(&str, &str)] = &[
  ("lmdb-js-lite", "dist/compat.js"),
  ("@atlaspack/bundler-experimental", "lib/index.js"),
  ("@atlaspack/bundler-default", "lib/DefaultBundler.js"),
  ("@atlaspack/bundler-library", "lib/LibraryBundler.js"),
  ("@atlaspack/compressor-brotli", "lib/BrotliCompressor.js"),
  ("@atlaspack/compressor-gzip", "lib/GzipCompressor.js"),
  ("@atlaspack/compressor-raw", "lib/RawCompressor.js"),
  ("@atlaspack/config-default", "index.json"),
  ("@atlaspack/config-repl", "index.json"),
  ("@atlaspack/config-webextension", "index.json"),
  ("@atlaspack/build-cache", "lib/index.js"),
  ("@atlaspack/cache", "lib/index.js"),
  ("@atlaspack/cli", "lib/bin.js"),
  ("@atlaspack/codeframe", "lib/codeframe.js"),
  ("@atlaspack/conditional-import-types", "index.js"),
  ("@atlaspack/core", "lib/index.js"),
  ("@atlaspack/diagnostic", "lib/diagnostic.js"),
  ("@atlaspack/e2e-tests", "index.js"),
  ("@atlaspack/feature-flags", "lib/index.js"),
  ("@atlaspack/fs", "lib/index.js"),
  ("@atlaspack/graph", "lib/index.js"),
  ("@atlaspack/integration-tests", "index.js"),
  ("@atlaspack/logger", "lib/Logger.js"),
  ("@atlaspack/markdown-ansi", "lib/markdown-ansi.js"),
  ("@atlaspack/package-manager", "lib/index.js"),
  ("@atlaspack/plugin", "lib/PluginAPI.js"),
  ("@atlaspack/profiler", "lib/index.js"),
  ("@atlaspack/register", "lib/register.js"),
  ("@atlaspack/rust", "index.js"),
  ("@atlaspack/test-utils", "src/utils.js"),
  ("@atlaspack/types-internal", "src/index.js"),
  ("@atlaspack/types", "src/index.js"),
  ("@atlaspack/utils", "lib/index.js"),
  ("@atlaspack/workers", "lib/index.js"),
  ("@atlaspack/link", "src/index.js"),
  ("@atlaspack/babel-preset", "index.js"),
  ("@atlaspack/babel-register", "index.js"),
  ("@atlaspack/bundle-stats", "lib/cli.js"),
  ("@atlaspack/eslint-config-browser", "index.js"),
  ("@atlaspack/eslint-config", "index.js"),
  ("@atlaspack/eslint-plugin", "index.js"),
  ("@atlaspack/query", "src/index.js"),
  ("@atlaspack/parcel-to-atlaspack", "dist/cli.js"),
  ("@atlaspack/namer-default", "lib/DefaultNamer.js"),
  ("@atlaspack/optimizer-blob-url", "lib/BlobURLOptimizer.js"),
  ("@atlaspack/optimizer-css", "lib/CSSOptimizer.js"),
  ("@atlaspack/optimizer-cssnano", "lib/CSSNanoOptimizer.js"),
  ("@atlaspack/optimizer-data-url", "lib/DataURLOptimizer.js"),
  ("@atlaspack/optimizer-htmlnano", "lib/HTMLNanoOptimizer.js"),
  ("@atlaspack/optimizer-image", "lib/ImageOptimizer.js"),
  ("@atlaspack/optimizer-inline-requires", "lib/InlineRequires.js"),
  ("@atlaspack/optimizer-svgo", "lib/SVGOOptimizer.js"),
  ("@atlaspack/optimizer-swc", "lib/SwcOptimizer.js"),
  ("@atlaspack/optimizer-terser", "lib/TerserOptimizer.js"),
  ("@atlaspack/packager-css", "lib/CSSPackager.js"),
  ("@atlaspack/packager-html", "lib/HTMLPackager.js"),
  ("@atlaspack/packager-js", "lib/index.js"),
  ("@atlaspack/packager-raw-url", "lib/RawUrlPackager.js"),
  ("@atlaspack/packager-raw", "lib/RawPackager.js"),
  ("@atlaspack/packager-svg", "lib/SVGPackager.js"),
  ("@atlaspack/packager-ts", "lib/TSPackager.js"),
  ("@atlaspack/packager-wasm", "lib/WasmPackager.js"),
  ("@atlaspack/packager-webextension", "lib/WebExtensionPackager.js"),
  ("@atlaspack/packager-xml", "lib/XMLPackager.js"),
  ("@atlaspack/reporter-build-metrics", "lib/BuildMetricsReporter.js"),
  ("@atlaspack/reporter-bundle-analyzer", "lib/BundleAnalyzerReporter.js"),
  ("@atlaspack/reporter-bundle-buddy", "lib/BundleBuddyReporter.js"),
  ("@atlaspack/reporter-bundle-stats", "lib/BundleStatsReporter.js"),
  ("@atlaspack/reporter-cli", "lib/CLIReporter.js"),
  ("@atlaspack/reporter-conditional-manifest", "lib/ConditionalManifestReporter.js"),
  ("@atlaspack/reporter-dev-server-sw", "lib/ServerReporter.js"),
  ("@atlaspack/reporter-dev-server", "lib/ServerReporter.js"),
  ("@atlaspack/reporter-json", "lib/JSONReporter.js"),
  ("@atlaspack/reporter-lsp", "lib/LspReporter.js"),
  ("@atlaspack/reporter-sourcemap-visualiser", "lib/SourceMapVisualiser.js"),
  ("@atlaspack/reporter-tracer", "lib/TracerReporter.js"),
  ("@atlaspack/resolver-default", "lib/DefaultResolver.js"),
  ("@atlaspack/resolver-glob", "lib/GlobResolver.js"),
  ("@atlaspack/resolver-repl-runtimes", "index.js"),
  ("@atlaspack/runtime-browser-hmr", "lib/HMRRuntime.js"),
  ("@atlaspack/runtime-js", "lib/JSRuntime.js"),
  ("@atlaspack/runtime-react-refresh", "lib/ReactRefreshRuntime.js"),
  ("@atlaspack/runtime-service-worker", "./lib/ServiceWorkerRuntime.js"),
  ("@atlaspack/runtime-webextension", "lib/WebExtensionRuntime.js"),
  ("@atlaspack/transformer-babel", "lib/BabelTransformer.js"),
  ("@atlaspack/transformer-css", "lib/CSSTransformer.js"),
  ("@atlaspack/transformer-glsl", "lib/GLSLTransformer.js"),
  ("@atlaspack/transformer-graphql", "lib/GraphQLTransformer.js"),
  ("@atlaspack/transformer-html", "lib/HTMLTransformer.js"),
  ("@atlaspack/transformer-image", "lib/ImageTransformer.js"),
  ("@atlaspack/transformer-inline-string", "lib/InlineStringTransformer.js"),
  ("@atlaspack/transformer-inline", "lib/InlineTransformer.js"),
  ("@atlaspack/transformer-js", "lib/JSTransformer.js"),
  ("@atlaspack/transformer-json", "lib/JSONTransformer.js"),
  ("@atlaspack/transformer-jsonld", "lib/JSONLDTransformer.js"),
  ("@atlaspack/transformer-less", "lib/LessTransformer.js"),
  ("@atlaspack/transformer-mdx", "lib/MDXTransformer.js"),
  ("@atlaspack/transformer-postcss", "lib/PostCSSTransformer.js"),
  ("@atlaspack/transformer-posthtml", "lib/PostHTMLTransformer.js"),
  ("@atlaspack/transformer-pug", "lib/PugTransformer.js"),
  ("@atlaspack/transformer-raw", "lib/RawTransformer.js"),
  ("@atlaspack/transformer-react-refresh-wrap", "lib/ReactRefreshWrapTransformer.js"),
  ("@atlaspack/transformer-sass", "lib/SassTransformer.js"),
  ("@atlaspack/transformer-svg-react", "lib/SvgReactTransformer.js"),
  ("@atlaspack/transformer-svg", "lib/SVGTransformer.js"),
  ("@atlaspack/transformer-toml", "lib/TOMLTransformer.js"),
  ("@atlaspack/transformer-typescript-tsc", "lib/TSCTransformer.js"),
  ("@atlaspack/transformer-typescript-types", "lib/TSTypesTransformer.js"),
  ("@atlaspack/transformer-webextension", "lib/WebExtensionTransformer.js"),
  ("@atlaspack/transformer-webmanifest", "lib/WebManifestTransformer.js"),
  ("@atlaspack/transformer-worklet", "lib/WorkletTransformer.js"),
  ("@atlaspack/transformer-xml", "lib/XMLTransformer.js"),
  ("@atlaspack/transformer-yaml", "lib/YAMLTransformer.js"),
  ("@atlaspack/lsp-protocol", "lib/index.js"),
  ("@atlaspack/lsp", "./lib/LspServer.js"),
  ("@atlaspack/watcher-watchman-js", "lib/index.js"),
  ("@atlaspack/babel-plugin-transform-contextual-imports", "./lib/index.js"),
  ("@atlaspack/babel-plugin-transform-runtime", "src/index.js"),
  ("@atlaspack/babel-preset-env", "src/index.js"),
  ("@atlaspack/swc-plugin-contextual-imports", "atlaspack_contextual_imports_swc_plugin.wasm"),
  ("@atlaspack/create-react-app", "src/bin.js"),
  ("@atlaspack/domain-sharding", "lib/index.js"),
  ("@atlaspack/events", "lib/index.js"),
  ("@atlaspack/macros", "index.js"),
  ("@atlaspack/node-resolver-core", "lib/index.js"),
  ("@atlaspack/service-worker", "service-worker.js"),
  ("@atlaspack/ts-utils", "lib/index.js"),
  ("@atlaspack/validator-eslint", "lib/EslintValidator.js"),
  ("@atlaspack/validator-typescript", "lib/TypeScriptValidator.js"),
];

/*
Run this in the Atlaspack repo to update

import * as fs from 'node:fs';
import * as path from 'node:path';
import * as url from 'node:url';
import * as process from 'node:process';
import glob from 'glob';

const __dirname = path.dirname(url.fileURLToPath(import.meta.url));
const __root = path.dirname(__dirname);
const { workspaces } = JSON.parse(fs.readFileSync(path.join(__root, 'package.json'), 'utf8'))

const ignore = [
  "@atlaspack/benchmark-three-js",
  "caniuse-database",
  "lmdb-js-lite",
  "fuzzer",
  "@atlaspack/repl",
  "@atlaspack/conditional-bundling-example",
  "@atlaspack/eslint-example",
  "@atlaspack/html-example",
  "@atlaspack/kitchen-sink-example",
  "@atlaspack/react-hmr-example",
  "@atlaspack/react-refresh-example",
  "@atlaspack/simple-example",
  "@atlaspack/typechecking-example",
  "@atlaspack/typescript-example",
  "atlaspack-for-vscode"
]

let output = ''

for (const workspace of workspaces) {
  for (const packageJson of glob.sync(path.join(workspace, 'package.json'), { cwd: __root })) {
    const { name, main } = JSON.parse(fs.readFileSync(path.join(__root, packageJson), 'utf8'))
    if (ignore.includes(name)) continue
    output += `("${name}", "${main || "index.js"}"),\n`
  }
}

process.stdout.write(output)
*/
